# .github/workflows/ci.yml
name: Build, Test, and Push Docker Image

on:
  push:
    branches: ["main"]

jobs:
  # Job 1: Run Linters (Optional)
  lint:
    name: "Run Linter (Pint)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Install dependencies (for linting)
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: "Pint check placeholder"
        run: echo "Skipping Pint, not installed. Add 'laravel/pint' to run."

  # Job 2: Run Tests (using Sail)
  test:
    name: "Run Artisan Tests"
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP (for composer / artisan)
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Copy .env
        run: cp .env.example .env

      - name: Set DB variables
        run: |
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=mysql/' .env || true
          sed -i 's/DB_DATABASE=laravel/DB_DATABASE=TodoApp/' .env || true
          sed -i 's/DB_USERNAME=root/DB_USERNAME=sail/' .env || true
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=password/' .env || true
          # ensure DB_PORT is present
          if ! grep -q '^DB_PORT=' .env; then echo 'DB_PORT=3306' >> .env; fi

      - name: Debug: show repo root & compose files
        run: |
          echo "PWD: $(pwd)"
          echo "Repo listing:"
          ls -la .
          echo "Check for compose file(s):"
          ls -la docker-compose.yml compose.yaml compose.yml || true
          echo "Show vendor/bin (if exists):"
          ls -la vendor/bin || true

      - name: Install PHP dependencies (include dev deps so Sail is installed)
        run: composer install --prefer-dist --no-interaction

      - name: Ensure compose file available to Sail
        run: |
          # If docker-compose.yml is missing but compose.yaml exists, copy it
          if [ -f compose.yaml ] && [ ! -f docker-compose.yml ]; then
            cp compose.yaml docker-compose.yml
            echo "Copied compose.yaml -> docker-compose.yml"
          fi
          if [ ! -f docker-compose.yml ]; then
            echo "ERROR: No docker-compose.yml found in repo root. Listing files:"
            ls -la .
            exit 1
          fi

      - name: Ensure vendor/bin/sail exists
        run: |
          if [ ! -f vendor/bin/sail ]; then
            echo "vendor/bin/sail not found. Showing vendor/laravel contents:"
            ls -la vendor || true
            echo "Attempting to run composer install again to include dev deps..."
            composer install --prefer-dist --no-interaction || true
          fi
          if [ ! -f vendor/bin/sail ]; then
            echo "ERROR: vendor/bin/sail still missing. Did composer install with --no-dev?"
            exit 1
          fi
          chmod +x vendor/bin/sail || true

      - name: Start Sail (explicit compose file)
        env:
          COMPOSE_FILE: docker-compose.yml
        run: |
          echo "Starting sail services..."
          ./vendor/bin/sail up -d

      - name: Wait for MySQL to be healthy
        run: |
          echo "Waiting for MySQL to be healthy..."
          attempts=0
          max=30
          until ./vendor/bin/sail ps | grep -E 'mysql' | grep -q '(healthy)'; do
            attempts=$((attempts+1))
            echo "Waiting for MySQL... (Attempt $attempts/$max)"
            sleep 2
            if [ "$attempts" -ge "$max" ]; then
              echo "MySQL did not become healthy after $((max*2)) seconds."
              ./vendor/bin/sail logs mysql || true
              ./vendor/bin/sail ps || true
              exit 1
            fi
          done
          echo "MySQL is healthy."

      - name: Generate App Key
        run: ./vendor/bin/sail artisan key:generate --ansi --no-interaction

      - name: Clear Config Cache
        run: ./vendor/bin/sail artisan config:clear

      - name: Run Migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: mysql
          DB_PORT: 3306
          DB_DATABASE: TodoApp
          DB_USERNAME: sail
          DB_PASSWORD: password
        run: ./vendor/bin/sail artisan migrate --force

      - name: Run Tests
        run: ./vendor/bin/sail artisan test --no-interaction --verbose

      - name: Tear down Sail (cleanup)
        if: always()
        run: |
          echo "Stopping sail..."
          ./vendor/bin/sail down --remove-orphans --volumes || true

  # Job 3: Build and Push Image to Docker Hub
  build-and-push:
    name: "Build and Push to Docker Hub"
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Show Current Directory
        run: pwd

      - name: List Root Directory Contents
        run: ls -la .

      - name: List Build Context Contents
        run: ls -la ./docker/8.2 || true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./docker/8.2
          file: ./docker/8.2/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:latest
          build-args: |
            WWWGROUP=1000
            NODE_VERSION=22
            POSTGRES_VERSION=17
